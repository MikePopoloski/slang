name: CI Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_msvc:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
    - uses: microsoft/setup-msbuild@v1.0.0
    - name: Install dependencies
      run: |
        pip install conan
        conan user
        conan --version
    - name: Configure
      run: |
        mkdir build
        cd build
        cmake -G "Visual Studio 16 2019" ..
    - name: Build
      run: msbuild build/INSTALL.vcxproj -m -p:configuration=release -p:platform=x64
    - name: Run tests
      run: |
        cd build
        ctest -C Release --output-on-failure
        
  build_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - compiler: clang++-9
            flags: '-DCMAKE_BUILD_TYPE=Debug -DSLANG_COVERAGE=ON -DSLANG_SANITIZERS=undefined,address "-DCMAKE_CXX_CLANG_TIDY=/usr/lib/llvm-9/bin/clang-tidy;-quiet;-checks=-*,clang-analyzer-*,bugprone-*,performance-*,modernize-*,-modernize-use-auto,-modernize-use-trailing-return-type,-modernize-raw-string-literal,-modernize-use-nodiscard,-bugprone-suspicious-semicolon,-bugprone-branch-clone,-bugprone-sizeof-expression,-clang-analyzer-cplusplus.NewDelete*,-clang-analyzer-cplusplus.InnerPointer,misc-*,-misc-non-private-member-variables-in-classes,-modernize-avoid-c-arrays"'
          - compiler: g++-9
            flags: '-DCMAKE_BUILD_TYPE=Release'
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        sudo apt-get install -y python3-setuptools
        pip3 install wheel
        pip3 install conan
        conan user
        conan --version
    - name: Build
      run: |
        export PATH="$HOME/.local/bin:$PATH"
        mkdir build
        cd build
        cmake .. -DCMAKE_CXX_COMPILER=g++-9 -DCI_BUILD=ON -DCMAKE_BUILD_TYPE=Release
        make -j8
    - name: Run tests
      run: |
        export LLVM_PROFILE_FILE=%p.profraw
        cd build
        ctest --output-on-failure
