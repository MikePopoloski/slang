name: CI Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - preset: clang-sanitize
            os: ubuntu-latest
          - preset: gcc-release
            os: ubuntu-24.04-arm
          - preset: gcc-11-release
            os: ubuntu-latest
          - preset: gcc-debug-shared
            os: ubuntu-latest
          - preset: gcc-debug-noexcept
            os: ubuntu-latest
          - preset: macos-release
            os: macos-latest
          - preset: win64-release
            os: windows-latest
          - preset: win64-debug-shared
            os: windows-latest
          - preset: win64-debug-noexcept
            os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/noble/ llvm-toolchain-noble-19 main"
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y g++-14 g++-11 clang-19 clang-tidy-19
    - uses: ilammy/msvc-dev-cmd@v1
      if: matrix.os == 'windows-latest'
    - uses: maxim-lobanov/setup-xcode@v1
      if: matrix.os == 'macos-latest'
      with:
        xcode-version: 'latest'
    - name: Configure
      run: cmake --preset ${{ matrix.preset }} -DSLANG_CI_BUILD=ON
    - name: Build
      run: cmake --build build/${{ matrix.preset }} -j8
    - name: Run tests
      run: ctest --test-dir build/${{ matrix.preset }} --output-on-failure --no-tests=error -j8

  linux-coverage:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Install dependencies
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y g++-14
        wget https://github.com/linux-test-project/lcov/releases/download/v2.3/lcov-2.3.tar.gz
        tar -xvf lcov-2.3.tar.gz
        cd lcov-2.3
        sudo make install
        sudo cpan App::cpanminus
        sudo cpanm --notest Capture::Tiny DateTime
    - name: Configure
      run: cmake --preset=ci-coverage
    - name: Build
      run: cmake --build build/ci-coverage -j8
    - name: Run tests
      run: ctest --test-dir build/ci-coverage --output-on-failure --no-tests=error -j8
    - name: Process coverage info
      run: cmake --build build/ci-coverage -t coverage
    - name: Submit to codecov.io
      uses: codecov/codecov-action@v5
      with:
        files: build/ci-coverage/coverage.info
        plugins: noop
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
